name: APK builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: jirutka/setup-alpine@v1
        with:
          arch: aarch64
          packages: vala abuild sudo bluez-dev bash meson build-base glib-dev alsa-utils alsa-utils-doc alsa-lib alsa-lib-dev alsaconf alsa-ucm-conf alsa-tools-dev pulseaudio-dev cmake gstreamer-dev gst-plugins-base-dev gobject-introspection-dev mesa-dev libx11-dev wayland-dev libxkbcommon-dev libinput-dev gnome-desktop-dev json-glib-dev libglibutil-dev gtest gtest-dev gmock yaml-cpp-dev gcovr autoconf gsound-dev libgudev-dev meson gi-docgen rstcheck geocode-glib-dev libgweather4-dev

      - name: Setup environment for building
        run: |
          echo "%wheel ALL=(ALL) ALL" | tee /etc/sudoers.d/wheel
          adduser runner wheel
          adduser runner abuild
          wget -P /etc/apk/keys https://mirror.bardia.tech/alphybris/aarch64/fakeshell@bardia.tech-642c0d85.rsa.pub
        shell: alpine.sh --root {0}
        
      - name: Setup keyrings
        run: |
          mkdir keys
          echo "${{ secrets.APK_PRIVATE_KEY }}" > keys/fakeshell@bardia.tech-642c0d85.rsa
          cat /home/runner/work/alphybrisaports/alphybrisaports/keys/fakeshell@bardia.tech-642c0d85.rsa
          wget -P keys https://mirror.bardia.tech/alphybris/aarch64/fakeshell@bardia.tech-642c0d85.rsa.pub
        shell: alpine.sh {0}
        
      - name: Add keyrings
        run: |
          mkdir /home/runner/.abuild
          echo "PACKAGER_PRIVKEY=/home/runner/work/alphybrisaports/alphybrisaports/keys/fakeshell@bardia.tech-642c0d85.rsa" | tee /home/runner/.abuild/abuild.conf
        shell: alpine.sh {0}
        
      - name: Build android-headers-28
        run: |
          cd android-headers-api28
          abuild -r
        shell: alpine.sh {0}
        
      - name: install android-headers-28
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/android-headers*.apk
        shell: alpine.sh --root {0}

      - name: Build libhybris
        run: |
          cd libhybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install libhybris
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libhybris*.apk
        shell: alpine.sh --root {0}

      # We need our own versions of wlroots for phoc, so it gets built first
      - name: Build wlroots-hybris
        run: |
          cd wlroots-hybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install wlroots-hybris
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/wlroots*.apk
        shell: alpine.sh --root {0}

      - name: Build libgrilio
        run: |
          cd libgrilio
          abuild -r
        shell: alpine.sh {0}

      - name: Install libgrilio
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libgrilio*.apk
        shell: alpine.sh --root {0}
        
      - name: Build libgbinder
        run: |
          cd libgbinder
          abuild -r
        shell: alpine.sh {0}

      - name: install libgbinder
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libgbinder*.apk
        shell: alpine.sh --root {0}

      - name: Build the apk
        run: for i in $(ls); do cd $i; abuild -d; cd ..; done
        shell: alpine.sh {0}

      - name: Make the index
        run: |
          mkdir apkindex
          mv ~/packages/alphybrisaports/$(arch)/*.apk apkindex/
          apk index -vU --allow-untrusted -o apkindex/APKINDEX.tar.gz apkindex/*.apk
          abuild-sign -k /home/runner/work/alphybrisaports/alphybrisaports/keys/fakeshell@bardia.tech-642c0d85.rsa apkindex/APKINDEX.tar.gz
          
      - name: Send everything to the moon!
        run: |
          sudo apt install ssh
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          scp -P 920 -o StrictHostKeyChecking=no apkindex/* root@mirror.bardia.tech:/alphybris/aarch64
