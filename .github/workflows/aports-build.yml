name: APK builds

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: jirutka/setup-alpine@v1
        with:
          arch: aarch64
          packages: abuild libglibutil-dev sudo autoconf automake libtool libx11-dev libxext-dev glproto meson alsa-lib-dev glib-dev gcr4-dev gnome-desktop-dev pango-dev cmake make openssl-dev pkgconf ninja libgudev-dev libhandy1-dev vala json-glib-dev gsound gobject-introspection qt5-qtbase-dev doxygen webrtc-audio-processing-dev mce-dev bluez-dev wayland-dev linux-headers bsd-compat-headers glib libpng-dev docbook-xsl eudev-dev mesa-dev dbus-glib mobile-broadband-provider-info gtest gtest-dev gmock yaml-cpp-dev gcovr libcap-dev libinput-dev elogind-dev dhcp net-tools tdb-dev dbus-dev orc-dev orc-compiler libsndfile-dev soxr-dev libxcb-dev libice-dev libsm-dev libxtst-dev avahi-dev sbc-dev fftw-dev jack-dev speexdsp-dev check-dev perl perl-xml-parser pixman-dev xcb-util-wm-dev xkeyboard-config xcb-util-image-dev wayland-protocols gsound-dev gi-docgen rstcheck gsettings-desktop-schemas-dev polkit-dev lcms2-dev libcanberra-dev libgweather4-dev libnotify-dev libwacom-dev modemmanager-dev networkmanager-dev upower-dev colord-dev cups-dev geoclue-dev geocode-glib-dev nss-dev aom-dev bzip2-dev curl-dev directfb-dev faac-dev faad2-dev fdk-aac-dev flite-dev glu-dev gobject-introspection-dev gsm-dev gst-plugins-base-dev gstreamer-dev libass-dev libdc1394-dev libde265-dev libdvdnav-dev libdvdread-dev libexif-dev libfreeaptx-dev libmms-dev libmodplug-dev libnice-dev librsvg-dev libsrtp-dev libusrsctp-dev libva-glx-dev libvdpau-dev libwebp-dev neon-dev openexr-dev openjpeg-dev opus-dev rtmpdump-dev soundtouch-dev spandsp-dev tiff-dev vo-aacenc-dev vo-amrwbenc-dev vulkan-headers x265-dev zbar-dev evolution-data-server-dev linux-pam-dev libadwaita-dev evince-dev gcr-dev gettext-dev libsecret-dev polkit-elogind-dev py3-docutils libxslt-dev libdrm-dev

      - name: Setup environment for building
        run: |
          echo "%wheel ALL=(ALL) ALL" | tee /etc/sudoers.d/wheel
          adduser runner wheel
          adduser runner abuild
          wget -P /etc/apk/keys https://mirror.bardia.tech/alphybris/aarch64/fakeshell@bardia.tech-642c0d85.rsa.pub
        shell: alpine.sh --root {0}

      - name: Setup keyrings
        run: |
          mkdir keys
          echo "${{ secrets.APK_PRIVATE_KEY }}" > keys/fakeshell@bardia.tech-642c0d85.rsa
          cat /home/runner/work/alphybrisaports/alphybrisaports/keys/fakeshell@bardia.tech-642c0d85.rsa
          wget -P keys https://mirror.bardia.tech/alphybris/aarch64/fakeshell@bardia.tech-642c0d85.rsa.pub
        shell: alpine.sh {0}

      - name: Add keyrings
        run: |
          mkdir /home/runner/.abuild
          echo "PACKAGER_PRIVKEY=/home/runner/work/alphybrisaports/alphybrisaports/keys/fakeshell@bardia.tech-642c0d85.rsa" | tee /home/runner/.abuild/abuild.conf
        shell: alpine.sh {0}

      - name: Build android-headers-28
        run: |
          cd android-headers-api28
          abuild -r
        shell: alpine.sh {0}

      - name: install android-headers-28
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/android-headers*.apk
        shell: alpine.sh --root {0}

      - name: Build libhybris
        run: |
          cd libhybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install libhybris
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libhybris*.apk
        shell: alpine.sh --root {0}

      # We need our own versions of wlroots for phoc, so it gets built first
      - name: Build wlroots-hybris
        run: |
          cd wlroots-hybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install wlroots-hybris
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/wlroots*.apk
        shell: alpine.sh --root {0}

      - name: Build libgrilio
        run: |
          cd libgrilio
          abuild -r
        shell: alpine.sh {0}

      - name: Install libgrilio
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libgrilio*.apk
        shell: alpine.sh --root {0}

      - name: Build libgbinder
        run: |
          cd libgbinder
          abuild -r
        shell: alpine.sh {0}

      - name: install libgbinder
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libgbinder*.apk
        shell: alpine.sh --root {0}

      - name: Build pulseaudio
        run: |
          cd pulseaudio-hybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install pulseaudio
        run: |
          apk del libpulse libpulse-mainloop-glib
          apk add /home/runner/packages/alphybrisaports/$(arch)/pulseaudio*.apk
          apk add /home/runner/pakcages/alphybrisaports/$(arch)/libpulse*.apk
        shell: alpine.sh --root {0}

      - name: Build callaudiod
        run: |
          cd callaudiod-hybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install callaudiod
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/callaudiod*.apk
        shell: alpine.sh --root {0}

      - name: Build feedbackd-hybris
        run: |
          cd feedbackd-hybris
          abuild -r
        shell: alpine.sh {0}

      - name: Install feedbackd-hybris
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/feedbackd*.apk
        shell: alpine.sh --root {0}

      - name: Build libwspcodec
        run: |
          cd libwspcodec
          abuild -r
          apk del libpulse pulseaudio
        shell: alpine.sh {0}

      - name: Install libwspcodec
        run: apk add /home/runner/packages/alphybrisaports/$(arch)/libwspcodec*.apk
        shell: alpine.sh ---root {0}

      - name: Build the apk
        run: for i in $(ls); do cd $i; abuild -d; cd ..; done
        shell: alpine.sh {0}

      - name: Make the index
        run: |
          mkdir apkindex
          mv ~/packages/alphybrisaports/$(arch)/*.apk apkindex/
          apk index -vU --allow-untrusted -o apkindex/APKINDEX.tar.gz apkindex/*.apk
          abuild-sign -k /home/runner/work/alphybrisaports/alphybrisaports/keys/fakeshell@bardia.tech-642c0d85.rsa apkindex/APKINDEX.tar.gz

      - name: Send everything to the moon!
        run: |
          sudo apt install ssh
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa
          scp -P 920 -o StrictHostKeyChecking=no apkindex/* root@mirror.bardia.tech:/alphybris/aarch64
